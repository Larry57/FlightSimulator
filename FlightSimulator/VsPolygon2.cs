// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 11/05/19 19:45    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace Jp.Maker1.Vsys3.Tools
{


    using System;
    using System.Drawing;
    using System.Collections;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;

    public class VsPolygon2 : VsElement
    {
        public String type;
        public Color col;
        public Color colB;
        public Polygon3D pol;
        internal bool faceflag;

        public VsPolygon2()
        {
            type = "VsPolygon2";
            faceflag = true;
            col = Color.Blue;
            colB = Color.Red;
            pol = new Polygon3D();
            faceflag = pol.BackfaceCheck();
        }

        public VsPolygon2(int np, double[] x, double[] y, double[] z, int r, int g,
                int b, int rb, int gb, int bb)
        {
            type = "VsPolygon2";
            faceflag = true;
            col = Color.FromArgb(r, g, b);
            colB = Color.FromArgb(rb, gb, bb);
            pol = new Polygon3D(np, x, y, z);
            faceflag = pol.BackfaceCheck();
        }

        public VsPolygon2(int np, double[] x, double[] y, double[] z, Color c,
                Color cb)
        {
            type = "VsPolygon2";
            faceflag = true;
            col = c;
            colB = cb;
            pol = new Polygon3D(np, x, y, z);
            faceflag = pol.BackfaceCheck();
        }

        public VsPolygon2(Polygon3D p, Color c, Color cb)
        {
            type = "VsPolygon2";
            faceflag = true;
            col = c;
            colB = cb;
            pol = p;
            faceflag = pol.BackfaceCheck();
        }

        public VsPolygon2(VsPolygon2 p)
        {
            type = "VsPolygon2";
            faceflag = true;
            col = p.col;
            colB = p.colB;
            pol = new Polygon3D(p.pol);
            faceflag = p.faceflag;
        }

        public virtual String ElemType()
        {
            return type;
        }

        public virtual VsElement Clip2D(Clipper clip)
        {
            VsPolygon2 ret = new VsPolygon2(this);
            if (ret.pol.NVertex() >= 3)
            {
                ret.pol = clip.Vs_polygon_clip_2d(ret.pol);
            }
            return ret;
        }

        public virtual VsElement Clip3DF(Clipper clip)
        {
            VsPolygon2 ret = new VsPolygon2(this);
            if (ret.pol.NVertex() >= 3)
            {
                ret.pol = clip.Vs_polygon_clip_3df(ret.pol);
                ret.faceflag = ret.pol.BackfaceCheck();
            }
            return ret;
        }

        public virtual double Depth()
        {
            return pol.ZMax();
        }

        public virtual void Draw(Graphics g)
        {
            if (pol.NVertex() >= 3)
            {
                if (faceflag)
                {
                    //g.SetColor(col);
                }
                else
                {
                    //g.SetColor(colB);
                }

                int[] ix = pol.IxArray();
                int[] iy = pol.IyArray();
                int n = ix.Length;
                //g.FillPolygon(ix, iy, n);
            }
        }

        public virtual void Complete_draw(Graphics g)
        {
            if (pol.NVertex() >= 3)
            {
                if (faceflag)
                {
                    //g.SetColor(col);
                }
                else
                {
                    //g.SetColor(colB);
                }

                int[] ix = pol.IxArray();
                int[] iy = pol.IyArray();
                int n = ix.Length;
                //g.FillPolygon(ix, iy, n);

                for (int i = 0; i < n; i++)
                {
                    int ie = i + 1;
                    if (ie >= n)
                        ie = 0;
                    //g.DrawLine(ix[i], iy[i], ix[ie], iy[ie]);
                }
            }
        }

        public virtual void Print()
        {
            System.Console.Out.Write(type + "::");
            System.Console.Out.Write(col + "/" + colB + "::");
            pol.Print();
        }

        public virtual VsElement Project(Projector proj)
        {
            VsPolygon2 ret = new VsPolygon2(this);
            if (ret.pol.NVertex() >= 3)
            {
                ret.pol = ret.pol.Project(proj);
            }
            return ret;
        }

        public virtual VsElement Transform(Matrix44 mat)
        {

            VsPolygon2 ret = new VsPolygon2(this);

            if (ret.pol.NVertex() >= 3)
            {
                ret.pol = ret.pol.Transform(mat);
                ret.faceflag = ret.pol.BackfaceCheck();
            }

            return ret;
        }

        public virtual BoundingBox BoundingBox()
        {
            return pol.BoundingBox();
        }

        public virtual void SetColor(Color colIn)
        {
            col = colIn;
            colB = colIn;
        }

        public virtual void SetMaterial(Material mate)
        {
        }
    }
}
