// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 11/05/19 19:45    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace Jp.Maker1.Sim.Tools
{

    using Jp.Maker1.Util;
    using Jp.Maker1.Vsys3.Tools;
    using System;
    using System.Collections;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;

    public class Bearing
    {
        public Angle yaw;

        public Angle pitch;

        public Bearing()
        {
            yaw = new Angle(0.0D, 0);
            pitch = new Angle(0.0D, 1);
            Set(0.0D, 0.0D);
        }

        public Bearing(Vector3D target)
        {
            yaw = new Angle(0.0D, 0);
            pitch = new Angle(0.0D, 1);
            Set(target);
        }

        public Bearing(double yawIn, double pitchIn)
        {
            yaw = new Angle(0.0D, 0);
            pitch = new Angle(0.0D, 1);
            Set(yawIn, pitchIn);
        }

        public void Set(Vector3D target)
        {
            double x = target.x;
            double y = target.y;
            double z = target.z;

            double dist2 = Math.Sqrt(x * x + z * z);
            if ((x == 0.0D) && (z == 0.0D))
                yaw.SetValue(0.0D);
            else
            {
                yaw.SetValue(System.Math.Atan2(x, z));
            }
            if ((y == 0.0D) && (dist2 == 0.0D))
                pitch.SetValue(0.0D);
            else
                pitch.SetValue(System.Math.Atan2(-y, dist2));
        }

        public void Set(double yawIn, double pitchIn)
        {
            yaw.SetValue(yawIn);
            pitch.SetValue(pitchIn);
        }

        public Vector3D Direction_vector()
        {
            return Direction_vector(pitch, yaw);
        }

        public static Vector3D Direction_vector(Angle pitchIn, Angle yawIn)
        {
            double cp = System.Math.Cos(pitchIn.GetValue());
            double z = System.Math.Cos(yawIn.GetValue()) * cp;
            double x = System.Math.Sin(yawIn.GetValue()) * cp;
            double y = -System.Math.Sin(pitchIn.GetValue());

            return new Vector3D(x, y, z);
        }
    }
}