// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 11/05/19 19:45    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
namespace FlightSimulator
{

    using System;
    using System.Collections;
    using System.ComponentModel;
    using System.IO;
    using System.Runtime.CompilerServices;

    public class Recorder
    {
        public readonly int n_max_data;

        public RecordData[] data;
        public int start_pos;
        public int current_pos;
        private bool flag_return;

        public Recorder()
        {
            n_max_data = 2000;
            data = new RecordData[2000];
            for (int i = 0; i < 2000; i++)
            {
                data[i] = new RecordData();
                Reset();
            }
        }

        public void Reset()
        {
            start_pos = 0;
            current_pos = 0;
            flag_return = false;
        }

        public void Record(double t, double dt, AirPlane ap)
        {
            if ((ap.flag_land == 1) && (ap.pMotion.vc.Length() <= 0.1D))
                return;

            data[current_pos].Record(t, dt, ap);
            current_pos += 1;
            if (current_pos >= 2000)
            {
                current_pos = 0;
                flag_return = true;
            }
            if (flag_return)
                start_pos = current_pos;
        }

        public int N_record()
        {
            int n = 0;

            if (flag_return)
            {
                n = 2000;
            }
            n += current_pos - start_pos;
            return n;
        }

        public RecordData GetData(int i)
        {
            int pos = start_pos + i;
            if (pos >= 2000)
            {
                pos -= 2000;
            }
            return data[pos];
        }

        public void Print(String version)
        {
            RecordData.PrintHeadder(version);
            int n = N_record();
            for (int i = 0; i < n; i++)
                GetData(i).Print();
        }
    }
}